!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.CP=t():e.CP=t()}(self,(function(){return(()=>{"use strict";var e,t,i,n={d:(e,t)=>{for(var i in t)n.o(t,i)&&!n.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:t[i]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},o={};function r(e,t){this.min=e,this.max=t}function s(){this.barrierDistance=400,this.boxHalfSize=50,this.moveAcceleration=.2,this.limitAngle=.7,this.cart=new r(new e(-this.boxHalfSize,-30),new e(this.boxHalfSize,30)),this.pendulum=new t(new e(0,0),new e(0,100)),this.barrierLeft=new t(new e(-this.barrierDistance,-1e3),new e(-this.barrierDistance,1e3)),this.barrierRight=new t(new e(this.barrierDistance,-1e3),new e(this.barrierDistance,1e3)),this.reset()}function a(e,t){this.ori=e,this.decl=t}function h(){this.vel=new a(0,0),this.angle=new a(0,0),this.pos=new a(0,0),this.e=0}function l(){}function c(){}return n.r(o),n.d(o,{Box:()=>r,Cart:()=>s,Line:()=>t,LinearModel:()=>h,LinearRegression:()=>a,Runner:()=>l,Training:()=>c,Utils:()=>i,Vector2:()=>e}),e=class{constructor(e,t){this.x=e,this.y=t}},r.prototype.getSize=function(){return new e(this.max.x-this.min.x,this.max.y-this.min.y)},r.prototype.draw=function(e){var t=this.getSize();e.lineWidth=3,e.strokeRect(this.min.x,this.min.y,t.x,t.y)},t=class{constructor(e,t){this.origin=e,this.end=t}size(){return Math.sqrt(Math.pow(this.origin.x-this.end.x,2)+Math.pow(this.origin.y-this.end.y,2))}draw(e){return e.lineWidth=3,e.beginPath(),e.moveTo(this.origin.x,this.origin.y),e.lineTo(this.end.x,this.end.y),e.stroke()}},s.prototype.reset=function(){this.gameOver=!1,this.score=0,this.position=0,this.leftPressed=!1,this.rightPressed=!1,this.acceleration=0,this.friction=.99,this.velocity=2*Math.random()-1,this.velocity+=this.velocity<0?-.2:.2,this.angle=0},s.prototype.draw=function(e){this.barrierLeft.draw(e),this.barrierRight.draw(e),e.translate(this.position,0),e.strokeStyle="#FF0000",e.lineWidth=1,e.beginPath(),e.moveTo(100*Math.sin(-this.limitAngle),100*Math.cos(-this.limitAngle)),e.lineTo(0,0),e.lineTo(100*Math.sin(this.limitAngle),100*Math.cos(this.limitAngle)),e.stroke(),e.strokeStyle="#000000",e.lineWidth=3,this.pendulum.end.x=100*Math.sin(this.angle),this.pendulum.end.y=100*Math.cos(this.angle),this.pendulum.draw(e),this.cart.draw(e)},s.prototype.update=function(){this.gameOver||(this.leftPressed?this.acceleration=-this.moveAcceleration:this.rightPressed?this.acceleration=this.moveAcceleration:this.acceleration=0,this.velocity+=this.acceleration,this.velocity*=this.friction,this.position+=this.velocity,this.angle+=.03*this.angle+.005*-this.velocity,this.score++,(this.angle>this.limitAngle||this.angle<-this.limitAngle)&&(this.gameOver=!0),(this.position+this.boxHalfSize>this.barrierDistance||this.position-this.boxHalfSize<-this.barrierDistance)&&(this.gameOver=!0))},a.prototype.jitter=function(e){this.ori+=(Math.random()-.5)*e,this.decl+=(Math.random()-.5)*e},a.prototype.clone=function(){return new a(this.ori,this.decl)},h.prototype.jitter=function(e){this.vel.jitter(e),this.angle.jitter(e),this.pos.jitter(e),this.e+=(Math.random()-.5)*e},h.prototype.clone=function(){var e=new h;return e.vel=this.pos.clone(),e.angle=this.pos.clone(),e.pos=this.pos.clone(),e.e=this.e,e},h.prototype.control=function(e){var t=this.vel.decl*e.velocity+this.vel.ori,i=this.angle.decl*e.angle+this.angle.ori+t+(this.pos.decl*e.position+this.pos.ori);e.leftPressed=i<this.e,e.rightPressed=i>this.e},l.runHeadless=function(e,t,i){t=void 0!==t?t:1/0;var n=new s;if(i)var o=performance.now();for(;!n.gameOver&&n.score<t;)void 0!==e&&e(n),n.update();if(i){var r=performance.now();console.log(" - Simulation ended with "+n.score+" points, took "+(r-o)+".")}return n.score},l.runGraphical=function(e,t,i){var n=new s,o=e.getContext("2d"),r=0;!function s(){void 0!==t&&t(n),n.update(),n.gameOver&&(void 0!==i&&i(n,r),n.score>r&&(r=n.score),n.reset()),o.save(),o.clearRect(0,0,e.width,e.height),o.font="15px Arial",o.textAlign="left",o.fillText("Points: "+n.score,10,20),o.fillText("Max: "+r,10,40),o.transform(1,0,0,-1,0,e.height),o.translate(e.width/2,e.height/2),n.draw(o),o.restore(),requestAnimationFrame(s)}()},c.trainIterative=function(e,t,i,n){e=void 0!==e?e:500,t=void 0!==t?t:100,i=void 0!==i?i:5,n=void 0!==n?n:2e3,console.log(" - Training process starting. ",{epochs:e,iterations:t,runs:i});for(var o=new h,r=c.testModel(o,i,n),s=0;s<e;s++){console.log(" - Running epoch ",s," score ",r);for(var a=null,l=0,d=0;d<t;d++){var u=o.clone();u.jitter(1);var f=c.testModel(u,i,n);f>l&&(a=u,l=f)}if(l>=r&&(o=a,r=l),r>=n)break}return console.log(" - Training finished with score ",r," model ",o),o},c.trainRandom=function(e,t,i){e=void 0!==e?e:1e5,t=void 0!==t?t:5,i=void 0!==i?i:2e3,console.log(" - Training process starting. ",{iterations:e,runs:t});for(var n=null,o=0,r=0;r<e;r++){var s=new h;s.jitter(2);var a=c.testModel(s,t,i);if(a>o&&(n=s,o=a),console.log(" - Iteration ",r," score ",o),o>=i)break}return console.log(" - Training finished with score ",o," model ",n),n},c.testModel=function(e,t,i){for(var n=0,o=0;o<t;o++)n+=l.runHeadless((function(t){e.control(t)}),i);return n/t},i=class{static writeFile(e,t){var i,n;"object"==typeof e&&(e=JSON.stringify(e,null,"\t")),i=new Blob([e],{type:"octet/stream"}),(n=document.createElement("a")).download=t,n.href=window.URL.createObjectURL(i),n.style.display="none",n.onclick=function(){document.body.removeChild(this)},document.body.appendChild(n),n.click()}static readFile(e){var t;return(t=document.createElement("input")).type="file",t.style.display="none",document.body.appendChild(t),t.onchange=function(){var i,n;if(0!==(i=t.files).length)return(n=new FileReader).onload=function(){var t;return t=n.result,e(t)},n.readAsText(i[0]),document.body.removeChild(t)},t.click()}},o})()}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,