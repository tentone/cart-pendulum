// Generated by CoffeeScript 2.6.1
(function() {
  var canvas, clear, clearTerminal, consoleLog, exp, model, recorder, run, train, trainRandomized;

  canvas = document.getElementById('canvas');

  clearTerminal = function() {
    var terminal;
    terminal = document.getElementById('terminal');
    terminal.innerHTML = '';
  };

  canvas.width = window.innerWidth;

  canvas.height = window.innerHeight;

  document.body.onresize = function() {
    canvas.width = window.innerWidth;
    canvas.height = window.innerHeight;
  };

  model = new CP.LinearModel();

  recorder = new CP.DataRecorder();

  run = document.getElementById('run');

  run.onclick = function() {
    CP.Runner.runGraphical(canvas, (function(cart) {
      model.control(cart);
      recorder.record(cart);
    }), function(cart, score) {
      recorder.end(score);
    });
  };

  exp = document.getElementById('export');

  exp.onclick = function() {
    CP.Utils.writeFile(recorder.getData(), 'data.json');
  };

  train = document.getElementById('trainIterative');

  train.onclick = function() {
    var epochs, iterations, runs;
    clearTerminal();
    epochs = Number.parseInt(document.getElementById('epochs').value);
    iterations = Number.parseInt(document.getElementById('iterations').value);
    runs = Number.parseInt(document.getElementById('runs').value);
    model = CP.LinearModelTrain.trainIterative(epochs, iterations, runs);
  };

  trainRandomized = document.getElementById('trainRandomized');

  trainRandomized.onclick = function() {
    var iterations, runs;
    clearTerminal();
    iterations = Number.parseInt(document.getElementById('iterations').value);
    runs = Number.parseInt(document.getElementById('runs').value);
    model = CP.LinearModelTrain.trainRandom(iterations, runs);
  };

  clear = document.getElementById('clear');

  clear.onclick = clearTerminal;

  consoleLog = console.log;

  console.log = function(a, b, c, d, e, f) {
    var arg, i, p, terminal;
    consoleLog(a, b, c, d, e, f);
    terminal = document.getElementById('terminal');
    p = document.createElement('p');
    p.style.color = '#FFFFFF';
    i = 0;
    while (i < arguments.length) {
      arg = arguments[i];
      if (typeof arg === 'object') {
        arg = JSON.stringify(arg);
      }
      p.innerHTML += String(arg);
      i++;
    }
    terminal.appendChild(p);
  };

}).call(this);
